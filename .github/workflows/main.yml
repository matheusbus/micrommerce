name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: docker.io
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service] #, product-service, inventory-service, order-service, payment-service]
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Extract version from pom.xml
        id: version
        run: |
          VERSION=$(mvn -f ./${{ matrix.service }}/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build ${{ matrix.service }} with Maven
        run: |
          cd ${{ matrix.service }}
          mvn clean install -DskipTests=false

      - name: Run tests and generate coverage with JaCoCo
        run: |
          cd ${{ matrix.service }}
          mvn test jacoco:report

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: ${{ matrix.service }}/target/site/jacoco/jacoco.csv
          badges-directory: ${{ matrix.service }}/target/badges

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service] #, product-service, inventory-service, order-service, payment-service, api-gateway]
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ env.DOCKER_PASS }}" | docker login -u "${{ env.DOCKER_USER }}" --password-stdin

      - name: Build Docker image with version and latest tag
        run: |
          IMAGE=${{ env.DOCKER_USER }}/${{ matrix.service }}
          docker build -t $IMAGE:${{ steps.version.outputs.version }} -t $IMAGE:latest ./${{ matrix.service }}

      - name: Push Docker image
        run: |
          IMAGE=${{ env.DOCKER_USER }}/${{ matrix.service }}
          docker push $IMAGE:${{ steps.version.outputs.version }}
          docker push $IMAGE:latest
